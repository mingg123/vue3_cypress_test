[{"/Users/minjikim/Desktop/minjiworkspace/vue3_cypress_test/cypress/support/component.ts":"1","/Users/minjikim/Desktop/minjiworkspace/vue3_cypress_test/cypress/support/commands.ts":"2","/Users/minjikim/Desktop/minjiworkspace/vue3_cypress_test/src/components/PackageName.cy.ts":"3","/Users/minjikim/Desktop/minjiworkspace/vue3_cypress_test/src/components/PackageName.vue":"4"},{"size":1118,"mtime":1666512992280,"results":"5","hashOfConfig":"6"},{"size":1314,"mtime":1666512992280,"results":"7","hashOfConfig":"6"},{"size":526,"mtime":1666513141472,"results":"8","hashOfConfig":"6"},{"size":322,"mtime":1666513044087,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":6,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":5,"fixableWarningCount":0,"source":"12"},"1g1qt0",{"filePath":"13","messages":"14","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"15"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"/Users/minjikim/Desktop/minjiworkspace/vue3_cypress_test/cypress/support/component.ts",["21","22","23","24","25","26"],"// ***********************************************************\n// This example support/component.ts is processed and\n// loaded automatically before your test files.\n//\n// This is a great place to put global configuration and\n// behavior that modifies Cypress.\n//\n// You can change the location of this file or turn off\n// automatically serving support files with the\n// 'supportFile' configuration option.\n//\n// You can read more here:\n// https://on.cypress.io/configuration\n// ***********************************************************\n\n// Import commands.js using ES2015 syntax:\nimport './commands'\n\n// Alternatively you can use CommonJS syntax:\n// require('./commands')\n\nimport { mount } from 'cypress/vue'\n\n// Augment the Cypress namespace to include type definitions for\n// your custom command.\n// Alternatively, can be defined in cypress/support/component.d.ts\n// with a <reference path=\"./component\" /> at the top of your spec.\ndeclare global {\n  namespace Cypress {\n    interface Chainable {\n      mount: typeof mount\n    }\n  }\n}\n\nCypress.Commands.add('mount', mount)\n\n// Example use:\n// cy.mount(MyComponent)","/Users/minjikim/Desktop/minjiworkspace/vue3_cypress_test/cypress/support/commands.ts",["27"],"/// <reference types=\"cypress\" />\n// ***********************************************\n// This example commands.ts shows you how to\n// create various custom commands and overwrite\n// existing commands.\n//\n// For more comprehensive examples of custom\n// commands please read more here:\n// https://on.cypress.io/custom-commands\n// ***********************************************\n//\n//\n// -- This is a parent command --\n// Cypress.Commands.add('login', (email, password) => { ... })\n//\n//\n// -- This is a child command --\n// Cypress.Commands.add('drag', { prevSubject: 'element'}, (subject, options) => { ... })\n//\n//\n// -- This is a dual command --\n// Cypress.Commands.add('dismiss', { prevSubject: 'optional'}, (subject, options) => { ... })\n//\n//\n// -- This will overwrite an existing command --\n// Cypress.Commands.overwrite('visit', (originalFn, url, options) => { ... })\n//\n// declare global {\n//   namespace Cypress {\n//     interface Chainable {\n//       login(email: string, password: string): Chainable<void>\n//       drag(subject: string, options?: Partial<TypeOptions>): Chainable<Element>\n//       dismiss(subject: string, options?: Partial<TypeOptions>): Chainable<Element>\n//       visit(originalFn: CommandOriginalFn, url: string, options: Partial<VisitOptions>): Chainable<Element>\n//     }\n//   }\n// }","/Users/minjikim/Desktop/minjiworkspace/vue3_cypress_test/src/components/PackageName.cy.ts",[],"/Users/minjikim/Desktop/minjiworkspace/vue3_cypress_test/src/components/PackageName.vue",["28"],"<template>\n  <input v-model=\"packageName\" data-cy=\"packageName_input\" type=\"text\" />\n</template>\n<script lang=\"ts\">\nimport { defineComponent, ref } from \"vue\";\n\nexport default defineComponent({\n  name: \"PackageName\",\n  setup(props) {\n    const packageName = ref<string>(\"\");\n    return { packageName };\n  },\n});\n</script>\n",{"ruleId":"29","severity":2,"message":"30","line":17,"column":8,"nodeType":null,"messageId":"31","endLine":17,"endColumn":20,"fix":"32"},{"ruleId":"29","severity":2,"message":"33","line":22,"column":23,"nodeType":null,"messageId":"31","endLine":22,"endColumn":36,"fix":"34"},{"ruleId":"35","severity":2,"message":"36","line":29,"column":3,"nodeType":"37","messageId":"38","endLine":33,"endColumn":4},{"ruleId":"29","severity":2,"message":"39","line":31,"column":26,"nodeType":null,"messageId":"40","endLine":31,"endColumn":26,"fix":"41"},{"ruleId":"29","severity":2,"message":"42","line":36,"column":22,"nodeType":null,"messageId":"31","endLine":36,"endColumn":37,"fix":"43"},{"ruleId":"29","severity":2,"message":"44","line":39,"column":25,"nodeType":null,"messageId":"40","endLine":39,"endColumn":25,"fix":"45"},{"ruleId":"29","severity":2,"message":"44","line":37,"column":5,"nodeType":null,"messageId":"40","endLine":37,"endColumn":5,"fix":"46"},{"ruleId":"47","severity":1,"message":"48","line":9,"column":9,"nodeType":"49","messageId":"50","endLine":9,"endColumn":14},"prettier/prettier","Replace `'./commands'` with `\"./commands\";`","replace",{"range":"51","text":"52"},"Replace `'cypress/vue'` with `\"cypress/vue\";`",{"range":"53","text":"54"},"@typescript-eslint/no-namespace","ES2015 module syntax is preferred over namespaces.","TSModuleDeclaration","moduleSyntaxIsPreferred","Insert `;`","insert",{"range":"55","text":"56"},"Replace `'mount',·mount)` with `\"mount\",·mount);`",{"range":"57","text":"58"},"Insert `⏎`",{"range":"59","text":"60"},{"range":"61","text":"60"},"@typescript-eslint/no-unused-vars","'props' is defined but never used.","Identifier","unusedVar",[589,601],"\"./commands\";",[697,710],"\"cypress/vue\";",[1026,1026],";",[1061,1076],"\"mount\", mount);",[1118,1118],"\n",[1314,1314]]
